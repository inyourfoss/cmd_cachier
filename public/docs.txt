[4mCMD_CACHIER[24m(1)              General Commands Manual             [4mCMD_CACHIER[24m(1)

[1mNAME[0m
       cmd_cachier -- A caching service for your cli commands using redis.

[1mSYNOPSIS[0m
       [1mcmd_cachier [4m[22mSUBCOMMAND[24m [YOUR_COMMAND]
       [1mcmd_cachier [4m[22mYOUR_COMMAND...[0m



[1mPREREQUESITES[0m
       A  redis  server  must be runnigng on the local machine.  On MacOS with
       homebrew.


       Start the daemon and enable on boot on ...

       [1mMacOS(homebrew)[0m

       When redis is installed (via homebrew) run:
             [1m$ brew service start redis[0m

       [1mLinux(systemd)[0m

       When redis is installed run:
             [1m$ systemctl enable redis[0m
             [1m$ systemctl start redis[0m

       For security reasons if you are only going to use redis for local  pur-
       poses.  Like: Development, cmd_cachier etc..  Then you should edit your
       [1mredis.conf  [22mAnd  uncomment  the  following  line   (MacOS:   /opt/home-
       brew/etc/redis.conf, Linux: /etc/redis/redis.conf) :

       From:
             [1m# bind 127.0.0.1 ::1 # listens on loopback IPv4 and IPv6[0m
       To:
             [1mbind 127.0.0.1 ::1 # listens on loopback IPv4 and IPv6[0m

[1mDESCRIPTION[0m
       [4mTODO:[24m Add description


       The db state is preserved throughout a desktop session as redis is a in
       memory  database.   To keep commands refreshed you can manually execute
       your command with the [1msave [22msubcommand.  Or you could refresh it progra-
       matically via systemd timers or crontab (man crontab).  [1mcrontab[0m

       Run:
             [1m$ crontab -e[0m

       Add the line for an update every minute:

             [1m* * * * * cmd_cache save YOUR_COMMAND[0m

       Or every 5 minutes:

             [1m*/5 * * * * cmd_cache save YOUR_COMMAND[0m

       TODO: systemd timer documentation


       If no operands are given, ...  directory are displayed.  If  a  subcom-
       mand is givenn, ...  If only your command is given, ...


[1mSUBCOMMANDS[0m
       The following subcommands are available:

       [1msave [4m[22mYOUR_COMMAND...[0m
               Save command to database in any case. Will overwrite if already
               in db.

       [1mquery [4m[22mYOUR_COMMAND...[0m
               Try to query database. Returns empty string if not in db.

       [1mmemory  [22mDisplay memory usage of saved commands.

       [1minfo    [22mInfo about redis database.


[1mEXAMPLES[0m
       Cache list of files in $HOME

             [1m$ cmd_cachier ls -1 $HOME[0m

       Cache list of git projects

             [1m$  cmd_cachier  fd  --glob  .git  --hidden --type d --max-depth 6[0m
             [1m--prune[0m

       Additionally remove the .git folders from the path:

             [1m$ cmd_cachier fd --glob .git  --hidden  --type  d  --max-depth  6[0m
             [1m--prune  [22m|  [1mwhile  read -r line;do tmp="${line%/}";echo ${tmp%/*}[0m
             [1m;done[0m

       With fzf:

             [1m$ cmd_cachier fd[22m. [1m--type d --max-depth 5 --hidden $HOME [22m| [1mfzf[0m

[1mTIPS AND TRICKS[0m
       Alias gp to cd into a selected git project in the example above.

       In your .bashrc:

             [1malias gp='cd $(cmd_cachier YOUR_SEARCH_COMMAND | fzf) '[0m

       Enforce refresh of the search on demand (alias with gpup):

             [1malias gpup='cd $(cmd_cachier save YOUR_SEARCH_COMMAND | fzf) '[0m

GNU                            October 28, 2023                 [4mCMD_CACHIER[24m(1)
